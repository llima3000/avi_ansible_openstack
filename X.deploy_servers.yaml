# ansible-playbook X.deploy_servers.yaml -e "os_username=demo os_password=Avi123$% os_project_name=Demo"
---
- hosts: localhost
  gather_facts: no

  connection: local

  vars_files:
    - vars/servers.yaml

  roles:
    - role: avinetworks.avisdk
  
  tasks:
    - name: Gather facts about Image "{{ avi_image_name }}"
      os_image_facts:
        auth: "{{ auth }}"
        image: "{{ avi_image_name }}"
      register: image_result
      # var: image_result['ansible_facts']['openstack_image']['id']

    - name: Gather facts about OpenStack flavor "{{ flavor_name }}" 
      os_flavor_facts:
        auth: "{{ auth }}"
        name: "{{ flavor_name }}"
      register: flavor_facts
      # var: flavor_facts['ansible_facts']['openstack_flavors'][0]['id']

    - name: Config security group for "{{ security_group_name }}"
      os_security_group:
        auth: "{{ auth }}"
        state: present
        name: "{{ security_group_name }}"
        description: security group for foo servers
      register: os_sec_group

    - name: Config roles in security group for "{{ security_group_name }}"
      os_security_group_rule:
        auth: "{{ auth }}"
        security_group: "{{ security_group_name }}"
        direction: ingress
        ethertype: IPv4
        protocol: "{{ item.protocol }}"
        port_range_min: "{{ item.port }}"
        port_range_max: "{{ item.port }}"
        remote_ip_prefix: 0.0.0.0/0
      loop: "{{ rules }}"

    - debug:
        msg: "{{ image_result }}"
      name: image_result

    - debug:
        msg: "{{ flavor_facts }}"
      name: flavor_facts

    - name: Launch a server instance
      os_server:
        state: present
        auth: "{{ auth }}"
        name: "{{ item.name }}"
        availability_zone: "{{ az }}"
        image: "{{ image_result['ansible_facts']['openstack_image']['id'] }}"
        key_name: "{{ key_name }}"
        timeout: 200
        flavor: "{{ flavor_facts['ansible_facts']['openstack_flavors'][0]['id'] }}"
        security_groups: "{{ security_group_name }}"
        #auto_ip: yes
        boot_from_volume: True
        volume_size: 5
        terminate_volume: True
        nics:
         - net-name: "{{ network_name }}"
      register: result
      loop: "{{ nodes }}"

